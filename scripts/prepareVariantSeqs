#!/usr/bin/make -Rrf
ifdef profile
SHELL=/usr/bin/time -f '=> perpareVaraiantSeqs: %e %C' /bin/bash -o pipefail
else
SHELL=/bin/bash -o pipefail
endif

ROOT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))

#------------------------------------------------------------
# params
#------------------------------------------------------------

#ng=75
#maxScaff=-1
#maxGap=100000
#minBundleSize=50000
#m=100000
#g=1
#gScaff=100000
#i=0
#t=4

k=31

#------------------------------------------------------------
# meta rules
#------------------------------------------------------------

.PRECIOUS: 
.DELETE_ON_ERROR:
.PHONY: check-params generateplot

default: runPipeline

runPipeline: check-params $(name).fa

check-name-param:
ifndef name
	$(error missing required param 'name' (output file prefix))
endif

check-params: check-name-param
ifndef geneName
	$(error missing required param 'geneName' (name of gene to extract))
endif
ifndef bubbleBed
	$(error missing required param 'bubbleBed' (path to reference bed))
endif
#ifndef gtf
#	$(error missing required param 'gtf' (path to gtf used in background sequence))
#endif
ifndef gtfBed
	$(error missing required param 'gtfBed' (path to gtfBed reference annotation))
endif
ifndef haplotypePath
	$(error missing required param 'haplotypePath' (path to each reference genomes))
endif

#------------------------------------------------------------
# pipeline rules
#------------------------------------------------------------

#extract gene from gtf file
#$(name).gtf: $(gtf)
#	zcat $< | awk 'if($2 == $(geneName)){print}' > $@

#extract genomic bounds from gtf file (TODO)
#$(name)_ref.bed: $(name).gtf
#	$(ROOT_DIR)/extractBedFromGTF.pl $< > $@
$(name)_ref.bed: $(gtfBed)
	zcat $< | grep -E '\|$(geneName)\s' > $@
	
#use bed file to find bubbles
$(name)_bubble.bed: $(name)_ref.bed
	tabix $(bubbleBed) -R $< | awk '{print $$1"\t"$$2"\t"$$3}' | sort | uniq > $@

#extract regions from each haplotype path bed
$(name)_haplotype.txt : $(name)_bubble.bed $(haplotypePath)
	ls $(haplotypePath)/*.bed | xargs grep -F -f $< > $@

#reformat and split each haplotype entry into file
$(name)_haplotype.bed : $(name)_haplotype.txt
	perl $(ROOT_DIR)/extractBedFromHaplotype.pl $< > $@

#extract from freeze-1 assemblies using seqtk
$(name).fa : $(name)_haplotype.bed
	ls $(name)_haplotype_beds/*.fa.gz | xargs -I % sh -c 'seqtk subseq % $<' > $@
	

 
